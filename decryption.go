package main

import (
	"strings"
)

func Decryption(s string) string {
	sl := strings.Split(s, "")
	length := len(sl)
	var text string
	var falseID int
	var key int

	itos := map[int]string{
		1:  "a",
		2:  "b",
		3:  "c",
		4:  "d",
		5:  "e",
		6:  "f",
		7:  "g",
		8:  "h",
		9:  "i",
		10: "j",
		11: "k",
		12: "l",
		13: "m",
		14: "n",
		15: "o",
		16: "p",
		17: "q",
		18: "r",
		19: "s",
		20: "t",
		21: "u",
		22: "v",
		23: "w",
		24: "x",
		25: "y",
		26: "z",
		27: "1",
		28: "2",
		29: "3",
		30: "4",
		31: "5",
		32: "6",
		33: "7",
		34: "8",
		35: "9",
		36: "0",
		37: "@",
		38: "K",
		39: "#",
		40: "%",
		41: "&",
		42: "[",
		43: "]",
		44: "(",
		45: ")",
		46: "?",
		47: "!",
		48: "-",
		49: "+",
		50: "=",
		51: "~",
		52: ",",
		53: ".",
		54: " ",
		55: "A",
		56: "B",
		57: "C",
		58: "D",
		59: "E",
		60: "F",
		61: "G",
		62: "H",
		63: "I",
		64: "J",
		65: "L",
		66: "M",
		67: "N",
		68: "O",
		69: "P",
		70: "Q",
		71: "R",
		72: "S",
		73: "T",
		74: "U",
		75: "V",
		76: "W",
		77: "X",
		78: "Y",
		79: "Z",
		80: "'",
		81: "\"",
		82: "{",
		83: "}",
	}
	stoi := map[string]int{
		"å": 0,
		"∫": 1,
		"ç": 2,
		"∂": 3,
		"´": 4,
		"ƒ": 5,
		"©": 6,
		"˙": 7,
		"ˆ": 8,
		"∆": 9,
		"˚": 10,
		"¬": 11,
		"µ": 12,
		"Ø": 13,
		"ø": 14,
		"π": 15,
		"œ": 16,
		"®": 17,
		"ß": 18,
		"†": 19,
		"¨": 20,
		"√": 21,
		"∑": 22,
		"≈": 23,
		`\`: 24,
		"Ω": 25,
		"¡": 26,
		"™": 27,
		"£": 28,
		"¢": 29,
		"∞": 30,
		"§": 31,
		"¶": 32,
		"•": 33,
		"ª": 34,
		"º": 35,
		"€": 36,
		"": 37,
		"‹": 38,
		"ﬁ": 39,
		"‡": 40,
		"”": 41,
		"’": 42,
		"·": 43,
		"‚": 44,
		"¿": 45,
		"⁄": 46,
		"—": 47,
		"±": 48,
		"≠": 49,
		"`": 50,
		"≤": 51,
		"≥": 52,
		"◊": 53,
		"♠": 54,
		"♣": 55,
		"♥": 56,
		"♦": 57,
		"∝": 58,
		"ℜ": 59,
		"ν": 60,
		"ξ": 61,
		"δ": 62,
		"ψ": 63,
		"ℵ": 64,
		"ℑ": 65,
		"Λ": 66,
		"Ψ": 67,
		"κ": 68,
		"℘": 69,
		"≅": 70,
		"∈": 71,
		"Ε": 72,
		"÷": 73,
		"η": 74,
		"⇐": 75,
		"↔": 76,
		"λ": 77,
		"↵": 78,
		"¾": 79,
		"ý": 80,
		"¦": 81,
		"Ð": 82,
	}

	for i := 0; i < length; i++ {
		if i == 0 {
			key = stoi[sl[0]]
		} else {
			falseID = stoi[sl[i]]
			idNumber := falseID + 83 - key
			idNumber %= 83

			sl[i] = itos[idNumber]
			text += sl[i]
		}
	}
	return text
}
